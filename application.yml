spring:
  application:
    name: library-api

  # Virtual Threads Configuration (Java 21)
  threads:
    virtual:
      enabled: true

  # PostgreSQL Configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/library_db}
    username: ${SPRING_DATASOURCE_USERNAME:library_user}
    password: ${SPRING_DATASOURCE_PASSWORD:library_pass}
    driver-class-name: org.postgresql.Driver

    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000

  # JPA/Hibernate Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  # Actuator for health checks
  management:
    endpoints:
      web:
        exposure:
          include: health,info
    endpoint:
      health:
        show-details: always

# Logging Configuration
logging:
  level:
    root: INFO
    com.library.api: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    com.library.api: DEBUG
    org.springframework.web: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate

logging:
  level:
    root: WARN
    com.library.api: INFO
